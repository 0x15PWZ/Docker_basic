Day 1 - Introduction to Containerization and Docker Concepts 
____________________________________________________________
ဒီနေ့မှာတော့ Containerization နဲ့ Docker အကြောင်းတွေကို မိတ်ဆက်ပေးပါမယ်။

🎯 ယနေ့ ရည်ရွယ်ချက်များ
> Containerization ဆိုတာ ဘာလဲ ဆိုတာနားလည်ဖို့
> Docker ဆိုတာဘာလဲ၊ ဘာကြောင့်လိုအပ်တာလဲ
> Traditional Deployment နဲ့ Docker Deployment ကြားကွာခြားချက်
> Docker architecture ကိုနားလည်ရန်
> Basic Docker Commands တချို့ စတင်သင်ကြားမယ်

📦 Containerization ဆိုတာဘာလဲ?
______________________________
Container ဆိုတာကတော့ application တစ်ခု ကို အခြား software package တွေနဲ့အတူ encapsulate လုပ်ပြီး တစ်ခြား system တွေမှာ ပြန်ရောထုတ် run လို့ရအောင် ပြင်ဆင်ထားတဲ့ နည်းပညာဖြစ်ပါတယ်။

🆚 Virtual Machine Vs Container
_______________________________
Feature		Virtual Machine		Docker Container
________________________________________________________
Size		GBs (heavy)		MBs (lightweight)
Boot time	Minutes			Seconds
OS		Full OS			Share host kernel
Resource usage	High			Low

🐳 Docker ဆိုတာဘာလဲ?
_____________________
Docker ကတော့ Container တွေကို run ဖို့အတွက် open-source platform ဖြစ်ပါတယ်။
Docker သုံးပြီးတော့ —
Application ကို container အဖြစ် package လုပ်နိုင်တယ်
OS အနည်းငယ်ပဲအသုံးပြုမယ်
Any OS/Any Server မှာ တူညီတဲ့ Result ကို ရမယ်
CI/CD & DevOps Automation မှာ အရေးကြီးတဲ့ role

🧠 Docker Components
____________________
Docker Engine – Containers များကို run/pull/push လုပ်ဖို့
Docker Images – OS + Application + Libraries တို့ပါဝင်တဲ့ read-only blueprint
Docker Container – Image ကို run လုပ်တဲ့ runtime instance
Dockerfile – Image တစ်ခုကို ဖန်တီးဖို့ရေးတဲ့ file
Docker Hub – Public Image Repository ( like GitHub  Docker version)

🛠️ Docker Architecture
_______________________
+-----------------------------+
|       Docker CLI            |
+-----------------------------+
          	           ↓
+-----------------------------+
|       Docker Daemon        |
+-----------------------------+
     ↓               		 ↓
Containers         Docker Images

=========================================================================//

